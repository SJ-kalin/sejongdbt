  -- USER --
CREATE TABLE MOVIE (
  MOVIE_CODE VARCHAR2(50) NOT NULL,
  MOVIE_TITLE VARCHAR2(50) NOT NULL,
  MOVIE_DIRECTOR VARCHAR2(30) NOT NULL,
  MOVIE_AGE NUMBER(10),
  MOVIE_GENRE VARCHAR2(50) NOT NULL,
  MOVIE_START DATE NOT NULL,
  MOVIE_END DATE NOT NULL,
  CONSTRAINT MOVIE_PK_MOVIECODE PRIMARY KEY (MOVIE_CODE) 
  );
  
  CREATE TABLE MYUSER(
    MYUSER_ID varchar2(50) not null ,
    MYUSER_NAME varchar2(20) not null,
    MYUSER_PW varchar2(50) not null,
    MYUSER_BIRTH date not null,
    MYUSER_PHONE varchar2(50) not null,
    MYUSER_EMAIL varchar2(50) not null,
    CONSTRAINT MYUSER_PK_MYUSERID PRIMARY KEY (MYUSER_ID)
  );
  CREATE TABLE SNACK_INFO(
    SNACK_CODE VARCHAR2(30) NOT NULL,
    SNACK_NAME VARCHAR2(50) NOT NULL,
    SNACK_CONTENT VARCHAR2(100) NOT NULL,
    SNACK_CAL NUMBER NOT NULL,
    SNACK_PRICE NUMBER NOT NULL,
    CONSTRAINT SNACK_INFO_PK_SNACKCODE PRIMARY KEY (SNACK_CODE)
  );
  CREATE TABLE MYUSER_SNACK_ORDER (
    ORDER_NUM NUMBER NOT NULL,
    MYUSER_ID VARCHAR2(50) NOT NULL,
    SNACK_CODE VARCHAR2(30) NOT NULL,
    ORDER_DATE DATE NOT NULL,
    CONSTRAINT SNACK_ORDER_PK_ORDERNUM PRIMARY KEY(ORDER_NUM),
    CONSTRAINT MYUSER_ORDER_FK_MYUSERID FOREIGN KEY(MYUSER_ID) REFERENCES MYUSER(MYUSER_ID) ON DELETE CASCADE,
    CONSTRAINT MYUSER_SNACK_INFO_FK_SNACKCODE FOREIGN KEY(SNACK_CODE) REFERENCES SNACK_INFO(SNACK_CODE) ON DELETE CASCADE
  );
   
CREATE SEQUENCE SNACK_ORDER_INC
START WITH 1
INCREMENT BY 1;
 
 CREATE TABLE RAT (
  MYUSER_ID VARCHAR2(50) NOT NULL,
  MOVIE_CODE VARCHAR2(50) NOT NULL,
  RAT_POINT NUMBER(5,0) NOT NULL,
  RAT_COMMENT VARCHAR2(200) DEFAULT '손에 땀을 쥐게하는 명작입니다!',
  
  CONSTRAINT RAT_PK_RATNO PRIMARY KEY (MYUSER_ID,MOVIE_CODE),
  CONSTRAINT RAT_FK_MYUSERID FOREIGN KEY (MYUSER_ID) REFERENCES MYUSER(MYUSER_ID)
  ON DELETE CASCADE,
  CONSTRAINT RAT_FK_MOVIECODE FOREIGN KEY (MOVIE_CODE) REFERENCES MOVIE(MOVIE_CODE)
  ON DELETE CASCADE
  
  );
 

  CREATE TABLE PAYMENT(
    PAYMENT_CODE VARCHAR2(10) NOT NULL,
    PAYMENT_WAY VARCHAR2(20) NOT NULL,
    CONSTRAINT PAYMENT_PK_PAYMENTCODE PRIMARY KEY(PAYMENT_CODE)
  );


  CREATE TABLE MOVIE_PAYMENT(
    MOVIE_PAYMENT_CODE NUMBER NOT NULL,
    MYUSER_ID VARCHAR2(50) NOT NULL,
    MOVIE_CODE VARCHAR2(50) NOT NULL,
    
    PAYMENT_CODE VARCHAR2(10) NOT NULL,
    PAYMENT_DATE DATE NOT NULL,

    CONSTRAINT MOVIE_PAYMENT_PK_MPCODE PRIMARY KEY(MOVIE_PAYMENT_CODE),
    CONSTRAINT MOVIE_PAYMENT_FK_MYUSERID FOREIGN KEY (MYUSER_ID) REFERENCES
    MYUSER (MYUSER_ID) ON DELETE CASCADE,
    CONSTRAINT MOVIE_PAYMENT_FK_PAYCODE FOREIGN KEY (PAYMENT_CODE) REFERENCES PAYMENT(PAYMENT_CODE)
    ON DELETE CASCADE,
    CONSTRAINT MOVIE_PAYMENT_FK_MOVIECODE FOREIGN KEY(MOVIE_CODE) REFERENCES MOVIE(MOVIE_CODE)
    ON DELETE CASCADE
    );
    CREATE SEQUENCE MOVIE_PAYMENT_INC
     START WITH 1
    INCREMENT BY 1;
    
  CREATE TABLE ACTOR(
    ACTOR_CODE VARCHAR2(30) NOT NULL,
    ACTOR_NAME VARCHAR2(30) NOT NULL,
    ACTOR_BIRTH DATE NOT NULL,
    ACTOR_GENDER VARCHAR2(4) NOT NULL,
    
    CONSTRAINT ACTOR_PK_ACTORCODE PRIMARY KEY(ACTOR_CODE)
  );
  
  CREATE TABLE MOVIE_ACTOR(
    ACTOR_CODE VARCHAR2(30) NOT NULL,
    MOVIE_CODE VARCHAR2(50) NOT NULL,
    ACTOR_ROLE VARCHAR2(30) NOT NULL,
    CONSTRAINT MOVIE_ACTOR_PK_ACTORCODE_MOVIECODE PRIMARY KEY(ACTOR_CODE, MOVIE_CODE),
    CONSTRAINT MOVIE_ACTOR_FK_ACTORCODE 
      FOREIGN KEY(ACTOR_CODE) REFERENCES ACTOR(ACTOR_CODE) ON DELETE CASCADE,
    CONSTRAINT  MOVIE_ACTOR_FK_MOVIECODE 
      FOREIGN KEY(MOVIE_CODE) REFERENCES MOVIE(MOVIE_CODE) ON DELETE CASCADE
  
  );
  

-- 시퀀스 생성하여 AUTOINCREASE
-- 행추가시 INSERT INTO MEMBER(ID, NAME ,EMAIL) VALUES (AUTOINCREASE.NEXTVAL, ~~,~~);


-- ADMIN --
CREATE TABLE EMPLOYEE_TASK(
    EMPLOYEE_ROLE VARCHAR2(20) ,
    EMPLOYEE_TASK_CON VARCHAR2(50) DEFAULT '고객을 위한 최고의 서비스',
    EMPLOYEE_TASK_SAL NUMBER NOT NULL,
    
    CONSTRAINT EMPLOYEE_TASK_PK_EMPLOYEEROLE PRIMARY KEY (EMPLOYEE_ROLE)
    );

CREATE TABLE EMPLOYEE(
  EMPLOYEE_NUM NUMBER NOT NULL,
  EMPLOYEE_NAME VARCHAR2(20) NOT NULL,
  EMPLOYEE_AGE INT NOT NULL,
  EMPLOYEE_GENDER VARCHAR2(4),
  EMPLOYEE_ROLE VARCHAR2(20) NOT NULL,
  EMPLOYEE_HIREDATE DATE NOT NULL,
  EMPLOYEE_PUN_CNT  INT DEFAULT 0,
  
  CONSTRAINT EMPLOYEE_PK_EMPLOYEENUM PRIMARY KEY(EMPLOYEE_NUM),
  CONSTRAINT EMPLOYEE_FK_EMPLOYEEROLE FOREIGN KEY(EMPLOYEE_ROLE)
  REFERENCES EMPLOYEE_TASK(EMPLOYEE_ROLE) ON DELETE CASCADE
  );
  
CREATE SEQUENCE EMPLOYEE_INC
START WITH 1
INCREMENT BY 1;

      

CREATE TABLE PAYMENT_STATICS(
  PAYMENT_DATE DATE NOT NULL,
  PAYMENT_SUM NUMBER,
  PAYMENT_COUNT NUMBER,
  MYUSER_COUNT NUMBER,
CONSTRAINTS PAYMENT_STATICS_PK_PAYMENTDATE PRIMARY KEY(PAYMENT_DATE));
        
        
        
  CREATE TABLE AD(
	  AD_TITLE VARCHAR2(100) NOT NULL,
    AD_COMPANY	VARCHAR2 (30) NOT NULL,
    AD_DATE DATE NOT NULL,
    AD_PRICE INT NOT NULL,
    CONSTRAINT AD_PK_ADTITLE PRIMARY KEY(AD_TITLE)
);

CREATE TABLE MOVIE_AD(
  CNT NUMBER,
  MOVIE_CODE VARCHAR2(10) NOT NULL,
  AD_TITLE VARCHAR2(100) NOT NULL,
  CONSTRAINT MOVIE_AD_PK_CNT PRIMARY KEY(CNT),
  CONSTRAINT MOVIE_AD_FK_ADTITLE FOREIGN KEY(AD_TITLE) REFERENCES AD(AD_TITLE) ON DELETE CASCADE,
  CONSTRAINT MOVIE_AD_FK_MOVIE_CODE FOREIGN KEY (MOVIE_CODE) REFERENCES MOVIE(MOVIE_CODE) ON DELETE CASCADE);
  
CREATE SEQUENCE MOVIE_AD_INC
START WITH 1
INCREMENT BY 1;




-- alter --
alter table employee modify (employee_pun_cnt number default 0 not null);


  CREATE or REPLACE PROCEDURE reset_sequence (sequencename IN VARCHAR2) as
  curr_val INTEGER;
    BEGIN
       EXECUTE IMMEDIATE 'alter sequence ' ||sequencename||' MINVALUE 0';
       EXECUTE IMMEDIATE 'SELECT ' ||sequencename ||'.nextval FROM dual' INTO curr_val;
       EXECUTE IMMEDIATE 'alter sequence ' ||sequencename||' increment by -'||curr_val;
       EXECUTE IMMEDIATE 'SELECT ' ||sequencename ||'.nextval FROM dual' INTO curr_val;
       EXECUTE IMMEDIATE 'alter sequence ' ||sequencename||' increment by 1';
    END reset_sequence;
    

-- 여기까지 실행하세요. --


-- 이 밑에는 DROP할 것이 있을때만 사용하세요. --

-- drop --    
DROP TABLE EMPLOYEE CASCADE CONSTRAINTS;
DROP TABLE EMPLOYEE_TASK CASCADE CONSTRAINTS;
DROP TABLE AD CASCADE CONSTRAINTS;
DROP TABLE MOVIE_AD CASCADE CONSTRAINTS;
DROP TABLE ACTOR CASCADE CONSTRAINTS;
DROP TABLE MOVIE_ACTOR CASCADE CONSTRAINTS;
DROP TABLE PAYMENT_STATICS CASCADE CONSTRAINTS;

DROP TABLE MOVIE CASCADE CONSTRAINTS;
DROP TABLE MYUSER CASCADE CONSTRAINTS;
DROP TABLE RAT CASCADE CONSTRAINTS;
DROP TABLE PAYMENT CASCADE CONSTRAINTS;
DROP TABLE MOVIE_PAYMENT CASCADE CONSTRAINTS;
DROP TABLE SNACK_INFO CASCADE CONSTRAINTS;
DROP TABLE MYUSER_SNACK_ORDER CASCADE CONSTRAINTS;

DROP SEQUENCE MOVIE_AD_INC;
DROP SEQUENCE EMPLOYEE_INC;
DROP SEQUENCE MOVIE_PAYMENT_INC;
DROP SEQUENCE SNACK_ORDER_INC;
purge recyclebin;

