DROP DATABASE IF EXISTS sejongdb;
CREATE DATABASE sejongdb;
USE sejongdb;

-- USER --
  
DROP TABLE IF EXISTS MOVIE;
CREATE TABLE MOVIE (
	MOVIE_CODE VARCHAR(50) NOT NULL,
	MOVIE_TITLE VARCHAR(50) NOT NULL,
	MOVIE_DIRECTOR VARCHAR(30) NOT NULL,
	MOVIE_AGE INT(10),
	MOVIE_GENRE VARCHAR(50) NOT NULL,
	MOVIE_START DATE NOT NULL,
	MOVIE_END DATE NOT NULL,
	CONSTRAINT MOVIE_PK_MOVIECODE PRIMARY KEY (MOVIE_CODE)
);
  
DROP TABLE IF EXISTS MYUSER;
CREATE TABLE MYUSER(
	MYUSER_ID VARCHAR(50) NOT NULL,
    MYUSER_NAME VARCHAR(20) NOT NULL,
    MYUSER_PW VARCHAR(50) NOT NULL,
    MYUSER_BIRTH DATE NOT NULL,
    MYUSER_PHONE VARCHAR(50) NOT NULL,
    MYUSER_EMAIL VARCHAR(50) NOT NULL,
    CONSTRAINT MYUSER_PK_MYUSERID PRIMARY KEY (MYUSER_ID)
);
 
DROP TABLE IF EXISTS SNACK_INFO;
CREATE TABLE SNACK_INFO (
    SNACK_CODE VARCHAR(30) NOT NULL,
    SNACK_NAME VARCHAR(50) NOT NULL,
    SNACK_CONTENT VARCHAR(100) NOT NULL,
    SNACK_CAL INT NOT NULL,
    SNACK_PRICE INT NOT NULL,
	CONSTRAINT SNACK_INFO_PK_SNACKCODE PRIMARY KEY (SNACK_CODE)
);

DROP TABLE IF EXISTS MYUSER_SNACK_ORDER;
CREATE TABLE MYUSER_SNACK_ORDER (
	ORDER_NUM INT NOT NULL AUTO_INCREMENT,
    MYUSER_ID VARCHAR(50) NOT NULL,
    SNACK_CODE VARCHAR(30) NOT NULL,
    ORDER_DATE DATE NOT NULL,
    CONSTRAINT SNACK_ORDER_PK_ORDERNUM PRIMARY KEY(ORDER_NUM),
    CONSTRAINT MYUSER_ORDER_FK_MYUSERID FOREIGN KEY(MYUSER_ID) REFERENCES MYUSER(MYUSER_ID) ON DELETE CASCADE,
    CONSTRAINT MYUSER_SNACK_INFO_FK_SNACKCODE FOREIGN KEY(SNACK_CODE) REFERENCES SNACK_INFO(SNACK_CODE) ON DELETE CASCADE
);

DROP TABLE IF EXISTS RAT;
CREATE TABLE RAT (
	MYUSER_ID VARCHAR(50) NOT NULL,
	MOVIE_CODE VARCHAR(50) NOT NULL,
	RAT_POINT INT(5) NOT NULL,
	RAT_COMMENT VARCHAR(200) ,
	CONSTRAINT RAT_PK_RATNO PRIMARY KEY (MYUSER_ID,MOVIE_CODE),
	CONSTRAINT RAT_FK_MYUSERID FOREIGN KEY (MYUSER_ID) REFERENCES MYUSER(MYUSER_ID)	ON DELETE CASCADE,
	CONSTRAINT RAT_FK_MOVIECODE FOREIGN KEY (MOVIE_CODE) REFERENCES MOVIE(MOVIE_CODE) ON DELETE CASCADE
);
 
DROP TABLE IF EXISTS PAYMENT;
CREATE TABLE PAYMENT(
	PAYMENT_CODE VARCHAR(10) NOT NULL,
    PAYMENT_WAY VARCHAR(20) NOT NULL,
    CONSTRAINT PAYMENT_PK_PAYMENTCODE PRIMARY KEY(PAYMENT_CODE)
);

DROP TABLE IF EXISTS MOVIE_PAYMENT;
CREATE TABLE MOVIE_PAYMENT (
    MOVIE_PAYMENT_CODE INT NOT NULL AUTO_INCREMENT,
    MYUSER_ID VARCHAR(50) NOT NULL,
    MOVIE_CODE VARCHAR(50) NOT NULL,
    PAYMENT_CODE VARCHAR(10) NOT NULL,
    PAYMENT_DATE DATE NOT NULL,
    CONSTRAINT MOVIE_PAYMENT_PK_MPCODE PRIMARY KEY (MOVIE_PAYMENT_CODE),
    CONSTRAINT MOVIE_PAYMENT_FK_MYUSERID FOREIGN KEY (MYUSER_ID) REFERENCES MYUSER (MYUSER_ID) ON DELETE CASCADE,
    CONSTRAINT MOVIE_PAYMENT_FK_PAYCODE FOREIGN KEY (PAYMENT_CODE) REFERENCES PAYMENT (PAYMENT_CODE)ON DELETE CASCADE,
    CONSTRAINT MOVIE_PAYMENT_FK_MOVIECODE FOREIGN KEY (MOVIE_CODE)REFERENCES MOVIE (MOVIE_CODE) ON DELETE CASCADE
);

DROP TABLE IF EXISTS ACTOR;
CREATE TABLE ACTOR(
    ACTOR_CODE VARCHAR(30) NOT NULL,
    ACTOR_NAME VARCHAR(30) NOT NULL,
    ACTOR_BIRTH DATE NOT NULL,
    ACTOR_GENDER VARCHAR(4) NOT NULL,
    CONSTRAINT ACTOR_PK_ACTORCODE PRIMARY KEY(ACTOR_CODE)
);
  
DROP TABLE IF EXISTS MOVIE_ACTOR;
CREATE TABLE MOVIE_ACTOR(
    ACTOR_CODE VARCHAR(30) NOT NULL,
    MOVIE_CODE VARCHAR(50) NOT NULL,
    ACTOR_ROLE VARCHAR(30) NOT NULL,
    CONSTRAINT MOVIE_ACTOR_PK_ACTORCODE_MOVIECODE PRIMARY KEY(ACTOR_CODE, MOVIE_CODE),
    CONSTRAINT MOVIE_ACTOR_FK_ACTORCODE FOREIGN KEY(ACTOR_CODE) REFERENCES ACTOR(ACTOR_CODE) ON DELETE CASCADE,
    CONSTRAINT  MOVIE_ACTOR_FK_MOVIECODE FOREIGN KEY(MOVIE_CODE) REFERENCES MOVIE(MOVIE_CODE) ON DELETE CASCADE
);
  
-- ADMIN --

DROP TABLE IF EXISTS EMPLOYEE_TASK;
CREATE TABLE EMPLOYEE_TASK(
    EMPLOYEE_ROLE VARCHAR(20) ,
    EMPLOYEE_TASK_CON VARCHAR(50) ,
    EMPLOYEE_TASK_SAL INT NOT NULL,
    CONSTRAINT EMPLOYEE_TASK_PK_EMPLOYEEROLE PRIMARY KEY (EMPLOYEE_ROLE)
);

DROP TABLE IF EXISTS EMPLOYEE;
CREATE TABLE EMPLOYEE(
	EMPLOYEE_NUM INT NOT NULL AUTO_INCREMENT,
	EMPLOYEE_NAME VARCHAR(20) NOT NULL,
	EMPLOYEE_AGE INT NOT NULL,
	EMPLOYEE_GENDER VARCHAR(4),
	EMPLOYEE_ROLE VARCHAR(20) NOT NULL,
	EMPLOYEE_HIREDATE DATE NOT NULL,
	EMPLOYEE_PUN_CNT  INT DEFAULT 0,
	CONSTRAINT EMPLOYEE_PK_EMPLOYEENUM PRIMARY KEY(EMPLOYEE_NUM),
	CONSTRAINT EMPLOYEE_FK_EMPLOYEEROLE FOREIGN KEY(EMPLOYEE_ROLE)
  REFERENCES EMPLOYEE_TASK(EMPLOYEE_ROLE) ON DELETE CASCADE
);

DROP TABLE IF EXISTS PAYMENT_STATICS;
CREATE TABLE PAYMENT_STATICS(
	PAYMENT_DATE DATE NOT NULL,
	PAYMENT_SUM INT,
	PAYMENT_COUNT INT,
	MYUSER_COUNT INT,
	PRIMARY KEY(PAYMENT_DATE)
);

DROP TABLE IF EXISTS AD; 
CREATE TABLE AD(
	AD_TITLE VARCHAR(100) NOT NULL,
	AD_COMPANY	VARCHAR (30) NOT NULL,
	AD_DATE DATE NOT NULL,
	AD_PRICE INT NOT NULL,
	CONSTRAINT AD_PK_ADTITLE PRIMARY KEY(AD_TITLE)
);

DROP TABLE IF EXISTS MOVIE_AD;
CREATE TABLE MOVIE_AD(
	CNT INT AUTO_INCREMENT,
	MOVIE_CODE VARCHAR(10) NOT NULL,
	AD_TITLE VARCHAR(100) NOT NULL,
	CONSTRAINT MOVIE_AD_PK_CNT PRIMARY KEY(CNT),
	CONSTRAINT MOVIE_AD_FK_ADTITLE FOREIGN KEY(AD_TITLE) REFERENCES AD(AD_TITLE) ON DELETE CASCADE,
	CONSTRAINT MOVIE_AD_FK_MOVIE_CODE FOREIGN KEY (MOVIE_CODE) REFERENCES MOVIE(MOVIE_CODE) ON DELETE CASCADE
);

